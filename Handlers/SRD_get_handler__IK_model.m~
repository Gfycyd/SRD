function SRD_get_handler__IK_model(varargin)
Parser = inputParser;
Parser.FunctionName = 'SRD_get_handler__IK_model';
Parser.addOptional('description', []);
Parser.parse(varargin{:});

description = Parser.Results.description;

if isfield(description, 'Casadi_cfile_name')
    Casadi = true;
else
    Casadi = false;
end

Handler_IK_Model = SRDHandler_IK_Model();
Handler_IK_Model.State.description = description;
    
if Casadi
    Handler_IK_Model.SerializationPrepNeeded = true;
    
    Handler_IK_Model.PostSerializationPrepFunction = @PostSerializationPrepFunction;
    

    
else
    Handler_IK_Model.get_Task                = str2func(Handler_IK_Model.State.description.FunctionName_Task);
    Handler_IK_Model.get_Jacobian            = str2func(Handler_IK_Model.State.description.FunctionName_TaskJacobian);
    Handler_IK_Model.get_Jacobian_derivative = str2func(Handler_IK_Model.State.description.FunctionName_TaskJacobian_derivative);
    
    SRD_save(Handler_IK_Model, 'Handler_IK_Model');
end



    function PostSerializationPrepFunction(Handler_IK_Model)
        
        so_function_name = [Path, Handler_IK_Model.State.description.Casadi_cfile_name, '.so'];
        
        external_Task                    = external(Handler_IK_Model.State.description.FunctionName_Task,                so_function_name);
        external_TaskJacobian            = external(Handler_IK_Model.State.description.Function_TaskJacobian,            so_function_name);
        external_TaskJacobian_derivative = external(Handler_IK_Model.State.description.Function_TaskJacobian_derivative, so_function_name);
        
        
        handles.Task = @(q) full(evalf(external_Task(q)));
        handles.TaskJacobian = @(q) full(evalf(external_TaskJacobian(q)));
        handles.TaskJacobian_derivative = @(q) full(evalf(external_TaskJacobian_derivative(q)));
        
        
    %         external_Task = external(Parser.Results.FunctionName_Task, ['./', so_function_name]);
%         external_TaskJacobian = external(Parser.Results.Function_TaskJacobian, so_function_name);
%         external_TaskJacobian_derivative = external(Parser.Results.Function_TaskJacobian_derivative, so_function_name);
%         
%         handles.Task = @(q) full(evalf(external_Task(q)));
%         handles.TaskJacobian = @(q) full(evalf(external_TaskJacobian(q)));
%         handles.TaskJacobian_derivative = @(q) full(evalf(external_TaskJacobian_derivative(q)));
    end

end